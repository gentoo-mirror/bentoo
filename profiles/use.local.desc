# This file is deprecated as per GLEP 56 in favor of metadata.xml.
# Please add your descriptions to your package's metadata.xml ONLY.
# * generated automatically using pmaint *

app-containers/docker:btrfs - Enables dependencies for the "btrfs" graph driver, including necessary kernel flags.
app-containers/docker:container-init - Makes the a staticly-linked init system tini available inside a container.
app-containers/docker:overlay2 - Enables dependencies for the "overlay2" graph driver, including necessary kernel flags.
app-editors/cursor:egl - Use EGL platform, enables smooth rending in high refresh rate monitors on X11/Xwayland
app-editors/cursor:wayland - Run in wayland mode under wayland sessions, xwayland otherwise. This flag doesn't affect x11 sessions.
app-editors/kiro:wayland - Enable native Wayland support for better integration with Wayland-based desktop environments
app-editors/vscodium:egl - Use EGL platform, enables smooth rendering in high refresh rate monitors on X11/Xwayland
app-editors/vscodium:wayland - Run in wayland mode under wayland sessions, xwayland otherwise. This flag doesn't affect x11 sessions.
app-emulation/wine-staging:arm64ec - Enable support for running x86_64 applications on arm64 via binary translation
app-emulation/wine-staging:capi - Enable ISDN support using net-libs/libcapi
app-emulation/wine-staging:crossdev-mingw - Use sys-devel/crossdev for the toolchain rather than dev-util/mingw64-toolchain (requires manual setting up and is mostly unsupported, try disabling if have issues)
app-emulation/wine-staging:dos - Pull in games-emulation/dosbox to run DOS applications
app-emulation/wine-staging:gecko - Enable mshtml support using app-emulation/wine-gecko
app-emulation/wine-staging:mingw - Build PE files using dev-util/mingw64-toolchain (more tested) rather than llvm-core/clang (newer)
app-emulation/wine-staging:mono - Enable .NET support using app-emulation/wine-mono
app-emulation/wine-staging:netapi - Enable support for configuring remote shares using net-fs/samba
app-emulation/wine-staging:pcap - Support packet capture software (e.g. wireshark)
app-emulation/wine-staging:perl - Install helpers that require perl (winedump/winemaker)
app-emulation/wine-staging:samba - Pull in net-fs/samba with winbind for NTLM auth support
app-emulation/wine-staging:sdl - Enable gamepad support using media-libs/libsdl2
app-emulation/wine-staging:wow64 - Enable the "new" wow64 mode that allows running 32bit applications without 32bit ELF multilib by mapping to 64bit calls (experimental, *may* have worse performance or other issues compared to USE=abi_x86_32 aka "old" wow64) -- if USE=mingw is set, still need the default abi_x86_32 set on dev-util/mingw64-toolchain but that can be done even with /no-multilib/ profiles. This can also be enabled on arm64 to allow running x86 applications via binary translation.
app-office/freeoffice:pax_kernel - Triggers a paxmarking of the binary
dev-libs/sentry-native:breakpad - Use dev-util/breakpad as the crash handler
dev-libs/sentry-native:curl - Enable support for automated uploading of crash reports
dev-util/vulkan-tools:cube - Build the cube/cubepp demos
media-gfx/blender:alembic - Add support for Alembic through media-gfx/alembic.
media-gfx/blender:bullet - Enable Bullet (Physics Engine).
media-gfx/blender:collada - Add support for Collada interchange format through media-libs/opencollada.
media-gfx/blender:color-management - Enable color management via media-libs/opencolorio.
media-gfx/blender:cuda - Build cycles renderer with nVidia CUDA support.
media-gfx/blender:cycles - Enable the Cycles raytracing render engine.
media-gfx/blender:cycles-bin-kernels - Precompile the cycles render kernels for the CUDA/HIP/OneAPI backends, if they are enabled, at compile time. This makes it so that the user doesn't have to wait for the kernels to compile when they are used for the first time in Blender. If this option is not on, they will be built as needed at runtime.
media-gfx/blender:embree - Use embree to accelerate certain areas of the Cycles render engine.
media-gfx/blender:experimental - Enable experimental features
media-gfx/blender:fluid - Adds fluid simulation support via the built-in Mantaflow library.
media-gfx/blender:hip - Build cycles renderer with AMD HIP support.
media-gfx/blender:manifold - Enable Manifold render backend via sci-mathematics/manifold
media-gfx/blender:nanovdb - Enable nanoVDB support in Cycles. Uses less memory than regular openVDB when rendering.
media-gfx/blender:ndof - Enable NDOF input devices (SpaceNavigator and friends).
media-gfx/blender:oidn - Enable OpenImageDenoiser Support
media-gfx/blender:oneapi - Build cycles renderer with Intel oneAPI SyCL support
media-gfx/blender:openpgl - Enable path guiding support in Cycles
media-gfx/blender:opensubdiv - Add rendering support form OpenSubdiv from Dreamworks Animation through media-libs/opensubdiv.
media-gfx/blender:openvdb - Enable openvdb for volumetric processing, like the voxel remesher. Also enables volumetric GPU preview rendering for Nvidia cards.
media-gfx/blender:optix - Add support for NVIDIA's OptiX Raytracing Engine.
media-gfx/blender:osl - Add support for OpenShadingLanguage scripting.
media-gfx/blender:pipewire - Enable Pipewire for audio support on Linux
media-gfx/blender:potrace - Add support for converting bitmaps into Grease pencil line using the potrace library.
media-gfx/blender:pugixml - Enable PugiXML support (Used for OpenImageIO, Grease Pencil SVG export)
media-gfx/blender:renderdoc - Build Blender with renderdoc support
media-gfx/blender:tbb - Use threading building blocks library from dev-cpp/tbb.
media-gfx/blender:vulkan - Add support for the experimental Vulkan viewport backend
media-gfx/pixieditor-bin:opengl - Ensure OpenGL support is available (requires graphics drivers)
media-gfx/pixieditor-bin:vulkan - Install Vulkan loader for hardware-accelerated rendering (requires compatible GPU and drivers)
media-libs/gstreamer:ptp - Controls Precision Time Protocol (PTP) helper. Written in Rust.
media-libs/gstreamer:unwind - Enable sys-libs/libunwind usage for better backtrace support in leaks tracer module
media-libs/mesa:d3d9 - Enable Direct 3D9 API through Nine state tracker. Can be used together with patched wine.
media-libs/mesa:llvm - Enable LLVM backend for Gallium3D.
media-libs/mesa:lm-sensors - Enable Gallium HUD lm-sensors support.
media-libs/mesa:opencl - Enable the Rusticl Gallium OpenCL state tracker.
media-libs/mesa:osmesa - Build the Mesa library for off-screen rendering.
media-libs/mesa:proprietary-codecs - Enable codecs for patent-encumbered audio and video formats.
media-libs/mesa:vdpau - Enable the VDPAU acceleration interface for the Gallium3D Video Layer.
media-libs/mesa:vulkan-overlay - Build vulkan-overlay-layer which displays Frames Per Second and other statistics
media-libs/mesa:wayland - Enable support for dev-libs/wayland
media-libs/mesa:xa - Enable the XA (X Acceleration) API for Gallium3D.
media-libs/vulkan-loader:layers - Include the vulkan layers
media-video/vlc:X - Enable support for e.g. fullscreen mode via X and the X C-language binding. It does not build a graphical interface
media-video/vlc:aom - Enable AV1 encoding/decoding support using media-libs/libaom
media-video/vlc:archive - Enable support for libarchive stream extractor
media-video/vlc:aribsub - Enable support for decoding ARIB STD-B24 subtitles
media-video/vlc:bluray - Enable libbluray for Blu-ray disc support
media-video/vlc:chromaprint - Enable libchromaprint for Chromaprint based audio fingerprinter support
media-video/vlc:chromecast - Enable experimental support for Google Chromecast
media-video/vlc:dav1d - Enable support for media-libs/dav1d AV1 decoder
media-video/vlc:dc1394 - Enable IIDC cameras support
media-video/vlc:directx - Enable Win32 DirectX, D3D11va and DxVA2 support
media-video/vlc:dvbpsi - Enable support for Mpeg-TS files (.ts, .m2ts, .mts) via media-libs/libdvbpsi
media-video/vlc:encode - Enable streaming-output support and videolan manager to control multiple streams from within one instance
media-video/vlc:faad - Enable AAC audio decoding library support via media-libs/faad2
media-video/vlc:fdk - Enable the Fraunhofer AAC codec library
media-video/vlc:fluidsynth - Enable Fluidsynth MIDI software synthesis (with external sound fonts)
media-video/vlc:gcrypt - Enable cryptography support via libgcrypt
media-video/vlc:gme - Enable support for media-libs/game-music-emu for playing various video game music formats
media-video/vlc:gstreamer - Enable GStreamer based decoding support (currently supports only video decoding)
media-video/vlc:kate - Adds support for Ogg Kate subtitles via libkate
media-video/vlc:kms - Enable kernel mode setting video output plugin via x11-libs/libdrm
media-video/vlc:libplacebo - Enable support for GPU accelerated video rendering with media-libs/libplacebo
media-video/vlc:libtar - Uses libtar instead of the built-in tar reader for reading custom skins
media-video/vlc:libtiger - Enable Ogg Kate subtitles rendering using libtiger
media-video/vlc:linsys - Enable support for Linux Linear Systems Ltd. SDI and HD-SDI input cards
media-video/vlc:live - Enable live555 streaming media support (client support for rtsp)
media-video/vlc:loudness - Enable loudness normalisation according to the EBU R128 standard using media-libs/libebur128
media-video/vlc:lua - Enable Lua scripting support, needed for including support for Jamendo (online music platform) and similar things
media-video/vlc:macosx-notifications - Enable Mac OS X notifications module (formerly growl)
media-video/vlc:matroska - Enable matroska support using reference libraries (fallback on other existing matroska support if disabled, i.e., matroska enabled FFmpeg)
media-video/vlc:mpeg - Add libmpeg2 support for mpeg-1 and mpeg-2 video streams
media-video/vlc:nfs - Enable support for nfs protocol via net-fs/libnfs
media-video/vlc:omxil - Enable OpenMAX Integration Layer codec module
media-video/vlc:optimisememory - Enable optimisation for memory rather than performance
media-video/vlc:projectm - Enable the projectM visualization plugin
media-video/vlc:run-as-root - Allows vlc to start for root. Don't enable this unless you have a very specific (e.g. embedded) need for it!
media-video/vlc:sdl-image - Enable sdl image video decoder (depends on sdl)
media-video/vlc:sftp - Enable libssh2 to support SFTP file transfer
media-video/vlc:shout - Enable libshout output
media-video/vlc:skins - Enable support for the skins2 interface
media-video/vlc:soxr - Enable SoX Resampler support via media-libs/soxr
media-video/vlc:srt - Enable support for Secure Reliable Transport (SRT) via net-libs/srt
media-video/vlc:tremor - Enable tremor, a fixed-point version of the Ogg Vorbis decoder
media-video/vlc:twolame - Enable twolame support (MPEG Audio Layer 2 encoder)
media-video/vlc:upnp - Enable support for the Intel SDK stack based UPnP discovery module instead of CyberLink
media-video/vlc:x265 - Support X265 Encoder
media-video/vlc:zeroconf - Enable support for zero-configuration networking via avahi
media-video/vlc:zvbi - Enable support for teletext subtitles via the zvbi library
net-im/telegram-desktop:enchant - Use the app-text/enchant spell-checking backend instead of app-text/hunspell
net-im/telegram-desktop:fonts - Use builtin patched copy of open-sans fonts (overrides fontconfig)
net-im/telegram-desktop:libdispatch - Use dev-libs/libdispatch to speed up concurrent code execution
net-libs/libqmi:mbim - Support QMI over Mobile Broadband Interface Model (MBIM)
net-libs/libqmi:qrtr - Support QMI over IPC Router bus (QRTR)
net-libs/nodejs:corepack - Enable the experimental corepack package management tool
net-libs/nodejs:inspector - Enable V8 inspector
net-libs/nodejs:npm - Enable NPM package manager
net-libs/nodejs:pax-kernel - Enable building under a PaX enabled kernel
net-libs/nodejs:snapshot - Enable snapshot creation for faster startup
net-libs/nodejs:system-icu - Use system dev-libs/icu instead of the bundled version
net-libs/nodejs:system-ssl - Use system OpenSSL instead of the bundled one
net-misc/modemmanager:mbim - Enable MBIM modem protocol
net-misc/modemmanager:qmi - Enable support for the QMI modem protocol used by devices with Qualcomm chipsets
net-misc/modemmanager:qrtr - Enable support for the QMI over IPC Router bus (QRTR) protocol
net-misc/networkmanager:concheck - Enable connectivity checking support
net-misc/networkmanager:connection-sharing - Support connection sharing (uses net-dns/dnsmasq)
net-misc/networkmanager:dhclient - Use dhclient from net-misc/dhcp for getting an IP via DHCP
net-misc/networkmanager:dhcpcd - Use net-misc/dhcpcd for getting an IP
net-misc/networkmanager:elogind - Use sys-auth/elogind for session tracking
net-misc/networkmanager:iptables - Use net-firewall/iptables for connection sharing
net-misc/networkmanager:iwd - Use net-wireless/iwd instead of net-wireless/wpa_supplicant for wifi support by default
net-misc/networkmanager:modemmanager - Enable support for mobile broadband devices using net-misc/modemmanager
net-misc/networkmanager:nftables - Use net-firewall/nftables for connection sharing
net-misc/networkmanager:nss - Use dev-libs/nss for cryptography
net-misc/networkmanager:ofono - Use net-misc/ofono for telephony support.
net-misc/networkmanager:ovs - Enable OpenVSwitch support
net-misc/networkmanager:ppp - Enable support for mobile broadband and PPPoE connections using net-dialup/ppp
net-misc/networkmanager:psl - Use public suffix list via net-libs/libpsl
net-misc/networkmanager:resolvconf - Use net-dns/openresolv for managing DNS information in /etc/resolv.conf. Generally, a symlink to /run/NetworkManager/resolv.conf is simpler. On systems running systemd-resolved, disable this flag and create a symlink to /run/systemd/resolve/stub-resolv.conf.
net-misc/networkmanager:teamd - Enable Teamd control support
net-misc/networkmanager:tools - Build cli tools such as nmcli, nmtui and nm_cloud_setup
net-misc/networkmanager:wext - Enable support for the deprecated Wext (Wireless Extensions) API; needed for some older drivers (e.g. ipw2200, ndiswrapper)
net-misc/networkmanager:wifi - Enable support for wifi and 802.1x security
net-misc/openssh:ldns - Use LDNS for DNSSEC/SSHFP validation.
net-misc/openssh:legacy-ciphers - Enable support for deprecated, soon-to-be-dropped DSA keys. See https://marc.info/?l=openssh-unix-dev>m=170494903207436>w=2.
net-misc/openssh:livecd - Enable root password logins for live-cd environment.
net-misc/openssh:security-key - Include builtin U2F/FIDO support
net-misc/openssh:ssl - Enable additional crypto algorithms via OpenSSL
net-misc/openssh:xmss - Enable XMSS post-quantum authentication algorithm
net-misc/postman-bin:pax-kernel - Triggers a paxmarking of the binary
net-p2p/qbittorrent:dbus - Enable support for notifications and power-management features via D-Bus
net-p2p/qbittorrent:webui - Install qBittorrent Web UI (qbittorrent-nox)
net-p2p/syncthing:tools - Install stdiscosrv, strelaysrv and other tools to /usr/libexec/syncthing/.
sys-apps/busybox:make-symlinks - Create all the appropriate symlinks in /bin and /sbin.
sys-apps/busybox:math - Enable math support in gawk (requires libm)
sys-apps/busybox:mdev - Create the appropriate symlink in /sbin and install mdev.conf and support files
sys-apps/busybox:sep-usr - Support a separate /usr without needing an initramfs by booting with init=/ginit
sys-apps/busybox:static - Make the system rescue shell (/bin/bb) static so you can recover even when glibc is broken
sys-apps/busybox:systemd - Support systemd
sys-apps/fwupd:amdgpu - Build and install AMD dGPU (Navi3x and above) plugin
sys-apps/fwupd:amt - Build and install Intel AMT plugin
sys-apps/fwupd:archive - Use app-arch/libarchive for archives support
sys-apps/fwupd:cbor - Enable CBOR support for coSWID and uSWID via dev-libs/libcbor
sys-apps/fwupd:fastboot - Build and install fastboot plugin
sys-apps/fwupd:flashrom - Enable flashrom plugin via sys-apps/flashrom
sys-apps/fwupd:gusb - Enable dev-libs/libgusb support
sys-apps/fwupd:logitech - Build and install Logitech bulk controller plugin
sys-apps/fwupd:modemmanager - Build and install Modem Manager plugin
sys-apps/fwupd:nvme - Build and install NVMe plugin
sys-apps/fwupd:spi - Install Intel-SPI plugin
sys-apps/fwupd:synaptics - Install synaptics plugin
sys-apps/fwupd:test-full - Enable tests known not to play nicely with the sandbox
sys-apps/fwupd:tpm - Install Trusted Platform Module plugin
sys-apps/fwupd:uefi - Enable UEFI support
sys-apps/shadow:su - build the su program
www-client/librewolf:clang - Use Clang compiler instead of GCC
www-client/librewolf:eme-free - Disable EME (DRM plugin) capability at build time
www-client/librewolf:gmp-autoupdate - Allow Gecko Media Plugins (binary blobs) to be automatically downloaded and kept up-to-date in user profiles
www-client/librewolf:hwaccel - Force-enable hardware-accelerated rendering (Mozilla bug 594876)
www-client/librewolf:jumbo-build - Enable unified build - combines source files to speed up build process, but requires more memory
www-client/librewolf:libproxy - Enable libproxy support
www-client/librewolf:openh264 - Use media-libs/openh264 for H264 support instead of downloading binary blob from Mozilla at runtime
www-client/librewolf:pgo - Add support for profile-guided optimization for faster binaries - this option will double the compile time
www-client/librewolf:pulseaudio - Add sound server support via media-libs/libpulse (may be PulseAudio or Pipewire, or apulse if installed)
www-client/librewolf:sndio - Enable support for the media-sound/sndio backend
www-client/librewolf:system-av1 - Use the system-wide media-libs/dav1d and media-libs/libaom library instead of bundled
www-client/librewolf:system-harfbuzz - Use the system-wide media-libs/harfbuzz instead of bundled and media-gfx/graphite2 in most cases
www-client/librewolf:system-icu - Use the system-wide dev-libs/icu instead of bundled
www-client/librewolf:system-jpeg - Use the system-wide media-libs/libjpeg-turbo instead of bundled
www-client/librewolf:system-libevent - Use the system-wide dev-libs/libevent instead of bundled
www-client/librewolf:system-libvpx - Use the system-wide media-libs/libvpx instead of bundled
www-client/librewolf:system-pipewire - Use system media-video/pipewire for WebRTC and screencast instead of bundled one
www-client/librewolf:system-png - Use the system-wide media-libs/libpng instead of bundled (requires APNG patches)
www-client/librewolf:system-webp - Use the system-wide media-libs/libwebp instead of bundled
www-client/librewolf:wasm-sandbox - Sandbox certain third-party libraries through WebAssembly using RLBox
www-client/librewolf:wifi - Enable necko-wifi for NetworkManager integration, and access point MAC address scanning for better precision with opt-in geolocation services
